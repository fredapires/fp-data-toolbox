# generated by chatGPT on 01/27/23

import pytest

class TestExample:
    def test_one_plus_one(self):
        assert 1 + 1 == 2

    def test_two_times_two(self):
        assert 2 * 2 == 4

    @pytest.mark.parametrize("input_, output", [(3, 4), (4, 5), (5, 6)])
    def test_increment(self, input_, output):
        assert input_ + 1 == output

    @pytest.mark.skip(reason="skip this test for now")
    def test_skip(self):
        assert 1 == 0

    def test_assertion_error(self):
        with pytest.raises(AssertionError):
            assert 1 == 0

    @pytest.fixture
    def setup_data(self):
        return [1, 2, 3, 4, 5]

    def test_list_length(self, setup_data):
        assert len(setup_data) == 5

    def test_sum_of_list(self, setup_data):
        assert sum(setup_data) == 15

class TestSetup:
    @classmethod
    def setup_class(cls):
        print("Setting up class")
        cls.data = [1, 2, 3, 4, 5]

    @classmethod
    def teardown_class(cls):
        print("Tearing down class")
        del cls.data

class TestTearDown:
    def setup_method(self):
        print("Setting up method")
        self.data = [1, 2, 3, 4, 5]

    def teardown_method(self):
        print("Tearing down method")
        del self.data

